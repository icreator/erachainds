package org.erachain.controllers;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockHttpSession;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@RunWith(SpringRunner.class)
@SpringBootTest
@AutoConfigureMockMvc
public class TransactionControllerTest {

    private static final String APPLICATION_JSON_PRODUCER = "application/json;charset=utf-8";
    private static final String URL = "/transaction/proc";
    private MockHttpSession mockHttpSession;

    @Autowired
    private WebApplicationContext webApplicationContext;

    private MockMvc mockMvc;

    @Before
    public void setUp() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(webApplicationContext).build();

    }

    @Test
    public void validatePollTransaction() throws Exception {
        var trans_token = "3d7JB4WEzWBUxa73cC3exWGkceuwK38fnF9xJcwUwotsNaMqTNt1pMkotCkJ7yS9ZWQ6KyFBS2Sh4JXsQXzsmWQQA7vKnJoYTcCWWHvieWh4k45h6auzyNsN42et8xszZ4pJCgsVHmTUaJbJk8GzE69ktc5Xm4CZ4dHS779ZZ84Cwg8KuxU9hmSoYhdZbZeiWcJEoYayc14ziADFR9L58imX6wT9buQuNHKYa26CBz8sk5fh4vw1y1CTvzybFx78Ch2iaMWC8QWGZpb4xR15FtzodEmBiSWej98rfyWpA4mA41rmtzeFFvSBK5R9XKxWXDM2Y1UNgzbd6T3xZK3xUieKoMxkQSeRTfxGTZdcXyDgrFEPiUwDerdwoxbMMXGGT8RtbuydMjbSocASZPehbMb3wMxYPK6QS41vAWzWMCtPTV2CwoTSXM5fiEGVAcwK2U5EgrXEQb8LUs6hFw5FaEjfpGLSqdvU5rHdQ22ip2T2GKv8WSiz4zSVWfbQrCDXFFkpRZ5GYrgwxMXP7SxHY2ucpmYjXVx2oLKJWL3BgbKYfQXXKsoXi3tyhhEyr5HVjm5JyVuncSTphEH7veuRFxfKFXjKAqyD9nWhovNV5R5Cd8nANDfAXdZttmJ8YmaVtQnAf";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateRSendTransaction() throws Exception {
        var trans_token = "2oiN5au7FYnbhFMq5uV2tR2JQY8qseJ6b3dQJfbWEfjwAtyALWDbYcYVn4MZZrp8zvACCsxR4rM622eWcGchxAFqMdNeD86hK9K25on5NFRGWTmDKJFDbUCRauj5Khau58s83m2byNuXFzr2Z5TsBpmHgPLQpBjoyVrjtUAHF1m1k5KbJJ2tozksXHNgWEq1ZVWLUYuDJ2eB3tpt7inmL4TyGroWNC4qL5rDsuF7wMqFTgQ21TsJsQhhm9LAXaU9FSAoJVDxs9pxaRXcMFJjpAFRx7F923Cmvm4SqHVMBQd1JW3JsGERaXLJCkf5MgJNwNvxRbU5KNigGWhwnxWQTyNaSXSJQpzSZ1wHJ7S2if3HYaJLqLT3DSrJNuBxVW6sX81685YWKwrFHbHAJUxVsjs7itTzhjwwcGocu3gEJJqQqpDubbi5khnPHzhwvQS9EFaEsAF9GLgXWdQ8Jappvg4E7vTPXoRZdCgDVXRmdkgu8zbf85q54KxuQxyuJMMHcC7oVP2DxCGZauHxTQPAwdZ2VGnpG3xUQUmhPk57jNpJn8jhw75odpXcuv42TEbZKTqVHhQPikUYJsbpMQjXwivEAEM5WTELBkQfxyDfmxsUqSiwsLekKSKsPW";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateCertifyPubKeysTransaction() throws Exception {
        var trans_token = "5q9r657cq5WSrwCKF6V61RGSxMZYsQ1j1dak4tguvQC661cmwvXrTvtHSMm2a5CD2Qki3esYYFJJGBNZ6q2cPqCaJJH6Li8qU9hp58W9irfzkXQpw7UndnRKtmPrLytxHZpJshCMXPBB7cAHNnxYQwaqcs4SLu6qNtYTz42AhgD38xs86JDggBp3T6bBHoXEj3ucEYysHZo9REkQhBLF9Nxr9g2b";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateIssuePersonTransaction() throws Exception {
        var trans_token = "";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateCreateOrderTransaction() throws Exception {
        var trans_token = "2PYZHiVxbie5MvsEhUEEnx2i9QxnujTM1Hwt3Ls42zX843zc8XxUg2A6ASJFvjwe5Z7HdJPaK482HoGMACL27L9o1ATa7LqQ2eTsDaAmJ2YBNzV4WuvzA54JzNeyFWgepcvJ8wAzA7kuwWZpw1kkK7jH8CpWBQ4NXwutNuQTnZTeQs94m8UENCNHiwHvYyi2LhpjiZJxaxd5";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateCancelOrderTransaction() throws Exception {
        var trans_token = "RQVB9Zq4AoyJMBxqYPdcEbm7VdCeUA14BUviPb4LTQt5b4Qwqdo1pjUuaAckXDTStnrzZnBt1S5ag9bFheU9tw4e2kRYSTFKbgMUfhJTaKzMbsSQV7SkZ8TszDmMdsBjpWmEquXNi9NtMkcCE1cRyaoV3hbphffUn4mqdg3yXQ6VDLv7BZyWnrxHscYnUhkpHU2fk5CYgzedQdzyNV4TzthGj2mJsWTAvmksg8dQWp7UqTs7MwMdQAa";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateHashesRecodrdTransaction() throws Exception {
        var trans_token = "FV6oPtAzo38oCDg9bmv4TBWaUN2p5bDVvx8GfwBaSAfrDSU6LF1FH1m7YbTPqXj7MxMmjk5aPtPiTPzWCc7vtdNaeWcHQvjEvzKEiysFA1zbX7GPZsPXNFGHXmBfKnCunvHqe1c9v2Ljt1f5oPbnAJYZ7PXacihzdehLrbt94W5tGCE76tgd4xiBc2dtKjWhVSmMP8bZdKgigjceCKwHYww1yUspi4ArF1DY4pZ5WE66oKR4Em65HRzvYoF1x6WuYC";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }

    @Test
    public void validateIssueAssetTransaction() throws Exception {
        var trans_token = "2dNMRDczqcGZUUrjEX4ZncrdZsTgc8giEZXHTwDiC7Pu99etBP8KmnmvXmEzgKev2r554vzbviZrfv7b791nxBM7CQqdarttgfZnsyVGsuHzHZAAXT2HoL5wPYaRmbN1C6ZkTXTfRdKPufEBexkCCP8e597K5VUzuxBTQruXonRqvhTvm8WM7Qt1oYczSmcXLRjEXstHnzKUWS7KvUXSp9mjLyf8uxfjKXVn7o1N1LDi6jot7zz4JP7tCpDwioKuaifCChEFgT9FfCAuhpNhgcks7Tfiaco8dDpec8STzNxDigXsqqbLTzh35";
        mockMvc.perform(post(URL)
                .param("trans_token", trans_token))
                .andExpect(status().isOk());
    }
}
